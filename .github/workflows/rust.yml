name: Rust Build
on:
  pull_request:
  push:
    branches: [ "main" ]
    tags: ["v*.*.*"]
    
env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout 
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
        
      - name: Format Check
        uses: actions-rs/cargo@v1
        with: 
          command: fmt
          args: --all -- --check
      
      - name: Clippy Check
        uses: actions-rs/cargo@v1
        with: 
          command: clippy
          args: --verbose
        
      - name: Testing
        uses: actions-rs/cargo@v1
        with: 
          command: test
  
  deploy:
    name: deploy
    runs-on: ${{ matrix.os }}
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
            
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      
      - name: Build CLI
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} 
      
      - name: Package
        shell: bash 
        run: |
          mkdir -p dist/rover-${{ github.ref_name }}-${{ matrix.target }}
          mv target/${{ matrix.target }}/release/transpositd dist/rover-${{ github.ref_name }}-${{ matrix.target }}/
          tar -czvf dist/rover-${{ github.ref_name }}-${{ matrix.target }}.tar.gz dist/rover-${{ github.ref_name }}-${{ matrix.target }}/
          
      - name: Publish
        uses: softprops/action-gh-release@v1
        # TODO: if any of the build step fails, the release should be deleted.
        with:
            files: 'dist/rover*'
          
          
